configuration: Release

image: Visual Studio 2022

init:
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
          Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
      }
      else
      {
          Update-AppveyorBuild -Version "3.3.0-ci.$($env:APPVEYOR_BUILD_NUMBER)+sha.$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }

dotnet_csproj:
  patch: true
  file: 'src\Ninject\Ninject.csproj'
  version: '{version}'
  package_version: '{version}'

cache:
  - '%LocalAppData%\NuGet\v3-cache -> **\*.csproj'

before_build:
  - dotnet restore --verbosity quiet

build:
  parallel: true
  verbosity: minimal

test_script:
  - dotnet test --configuration Release --no-build --collect="Code Coverage" src\Ninject.Test
  - nuget install Microsoft.CodeCoverage -x -Verbosity quiet
  - for /f %%G in ('dir /b /s *.coverage') do Microsoft.CodeCoverage\build\netstandard1.0\CodeCoverage\CodeCoverage analyze /output:%%~dpnG.coveragexml "%%G"

after_test:
  - ps: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -Outfile codecov.exe
  - for /f %%G in ('dir /b /s *.coveragexml') do codecov -f "%%G"

artifacts:
  - path: 'src\**\*.nupkg'
  - path: 'src\**\*.snupkg'

deploy:
  provider: NuGet
  api_key:
    secure: ObZpjlJ2soInYT4Ooi+u2KeQQ1LRsBbRA9uPU7ctOma7CZxxNN8hPUVjwFUY2wS1
  on:
    appveyor_repo_tag: true
