<?xml version="1.0" encoding="utf-8"?>
<project name="Ninject" default="build">
	<property name="version" value="2.2.0.0" overwrite="true"/>
	<property name="product.name" value="Ninject" overwrite="false"/>
	<property name="product.company" value="Ninject Project Contributors" overwrite="false"/>
	<property name="product.duration" value="2007-2012" overwrite="false"/>
	<property name="product.description" value="Lightweight dependency injection for .NET" overwrite="false"/>
	<property name="product.platforms" value="net-3.5-client,net-4.0-client,net-4.5,net-3.5_medium_trust,net-4.0_medium_trust,net-4.5_medium_trust,silverlight-5.0,silverlight-4.0,silverlight-3.0,silverlight-2.0,silverlight-4.0-wp71,silverlight-4.0-wp7,mono-2.0,mono-3.5,mono-4.0,netcf-3.5"  overwrite="false"/>
	<property name="product.buildserverPlatforms" value="net-3.5-client,net-4.0-client,net-3.5_medium_trust,net-4.0_medium_trust,silverlight-5.0,silverlight-4.0,silverlight-3.0,silverlight-2.0,mono-2.0,mono-3.5,mono-4.0,netcf-3.5"  overwrite="false"/>
	<property name="dependencies" value=""	overwrite="false"/>
	
	<property name="product.assembly.testmodule" value="${product.name}.Tests.TestModule.dll" overwrite="false"/>
	<property name="product.assembly.testassembly" value="${product.name}.Tests.TestAssembly.dll" overwrite="false"/>
    <property name="current.path.testmodules" value="${path.build}/${build.platform}/tests/TestModules" dynamic="true"/>

	<include buildfile="Ninject.include" />
	<target name="all" depends="core csl test silverlight-test"/>
	<target name="nuget-all" depends="nuget"/>

	<target name="core" depends="init">
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" output="${current.path.build}/${product.assembly}" doc="${current.path.build}/${product.docfile}" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${path.lib}/System.Linq.dll" if="${string::contains(build.platform, 'wp7') and not(string::contains(build.platform, 'wp71'))}"/>
			</references>
			<nowarn>
				<warning number="1711"/>
			</nowarn>
		</csc>
	</target>

	<target name="csl" depends="init core">
		<property name="current.path.build.extensions" value="${path.build}/${build.platform}/${build.config}/extensions"/>
		<mkdir dir="${current.path.build.extensions}" if="${not(directory::exists(current.path.build.extensions))}"/>
		
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" output="${current.path.build.extensions}/CommonServiceLocator.NinjectAdapter.dll">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="CommonServiceLocator.NinjectAdapter/**/*.cs"/>
			</sources>
			<references basedir="${current.path.build}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${product.assembly}"/>
				<include name="${path.packages}/CommonServiceLocator.*/lib/NET35/Microsoft.Practices.ServiceLocation.dll"/>
			</references>
		</csc>
	</target>

	<target name="compile-test-modules" depends="core" unless="${skip.tests}">
		<mkdir dir="${current.path.test}"/>
		<copy todir="${current.path.test}" flatten="true">
			<fileset basedir="${current.path.build}">
				<include name="**/*.dll"/>
			</fileset>
		</copy>
		<csc noconfig="true" nostdlib="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
		 output="${current.path.test}/${product.assembly.testmodule}">
			<sources basedir="${path.src}">
				<include name="TestModules/**/*.cs"/>
			</sources>
			<references basedir="${current.path.test}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="${product.assembly}"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
		<csc noconfig="true" nostdlib="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
		 output="${current.path.test}/${product.assembly.testassembly}">
			<sources basedir="${path.src}">
				<include name="TestAssembly/**/*.cs"/>
			</sources>
			<references basedir="${current.path.test}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
	</target>

	<target name="compile-tests" depends="compile-test-modules" unless="${skip.tests}" if="${not(string::contains(build.platform, 'silverlight') or build.platform == 'netcf-3.5')}">
		<mkdir dir="${current.path.test}"/>
		<call target="CopyDefaultTestInfrastructureAssemblies"/>

		<copy todir="${current.path.testmodules}">
			<fileset basedir="${path.src}/Ninject.Test/TestModules">
				<include name="test.foo"/>
				<include name="test.bar"/>
			</fileset>
		</copy>
		<csc noconfig="true" nostdlib="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
		 output="${current.path.test}/${product.assembly.test}">
			<sources basedir="${path.src}">
				<include name="${product.name}.Test/**/*.cs"/>
			</sources>
			<references basedir="${current.path.test}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="Moq.dll"/>
				<include name="xunit.dll"/>
				<include name="xunit.extensions.dll"/>
				<include name="FluentAssertions.dll"/>
				<include name="System.Web.dll"/>
				<include name="${product.assembly}"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
	</target>

	<target name="compile-silverlight-tests" depends="compile-test-modules core" unless="${skip.tests or skip.silverlightTests}" if="${string::contains(build.platform, 'silverlight')}">
		<mkdir dir="${current.path.test}"/>
		<call target="CopyDefaultTestInfrastructureAssemblies-SL"/>

		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
		 output="${current.path.test}/${product.assembly.silverlighttestdll}">
			<sources basedir="${path.src}">
				<include name="${product.name}.Test/*.cs"/>
				<include name="${product.name}.Test/Fakes/**/*.cs"/>
				<include name="${product.name}.Test/Unit/**/*.cs"/>
				<include name="${product.name}.Test/Integration/**/*.cs"/>
				<include name="${product.name}.SilverlightTests/*.cs"/>
				<exclude name="${product.name}.Test/MSTestAttributes/*.cs"/>
			</sources>
			<references basedir="${current.path.test}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Windows.dll"/>
				<include name="System.Windows.Browser.dll"/>
				<include name="System.Net.dll"/>
				<include name="Microsoft.Phone.dll" if="${string::contains(build.platform, 'wp7')}"/>
				<include name="Microsoft.Phone.Interop.dll" if="${string::contains(build.platform, 'wp7')}"/>
				<include name="Moq.Silverlight.dll" unless="${string::contains(build.platform, 'wp7')}"/>
				<include name="Castle.Core.dll" if="${string::contains(build.platform, 'silverlight-4.0') or string::contains(build.platform, 'silverlight-5.0')}"/>
				<include name="Castle.Core-Silverlight.dll" unless="${string::contains(build.platform, 'silverlight-4.0') or string::contains(build.platform, 'silverlight-5.0')}"/>
				<include name="Castle.DynamicProxy-Silverlight.dll" unless="${build.platform == 'silverlight-4.0' or build.platform == 'silverlight-5.0'}"/>
				<include name="FluentAssertions.Silverlight.dll"/>
				<include name="xunit.runner.silverlight.dll"/>
				<include name="xunit-silverlight.dll"/>
				<include name="xunit.extensions-silverlight.dll"/>
				<include name="${product.assembly}"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
		<zip zipfile="${current.path.test}/${product.assembly.silverlighttest}">
			<fileset basedir="${current.path.test}">
				<include name="*.dll" />
				<exclude name="CommonServiceLocator.NinjectAdapter.dll" />
			</fileset>
			<fileset basedir="${path.src}/${product.name}.SilverlightTests">
				<include name="AppManifest.xaml" if="${string::contains(build.platform, 'silverlight-4.0')}"/>
			</fileset>
			<fileset basedir="${path.src}/${product.name}.SilverlightTests/Silverlight3">
				<include name="AppManifest.xaml" unless="${string::contains(build.platform, 'silverlight-4.0')}"/>
			</fileset>
		    <fileset basedir="${path.lib}">
				<include name="System.Linq.dll" if="${string::contains(build.platform, 'wp7') and not(string::contains(build.platform, 'wp71'))}"/>
			</fileset>
		</zip>
	</target>
</project>